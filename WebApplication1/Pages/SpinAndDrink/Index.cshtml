@page
@{
    ViewData["Title"] = "Spin and Drink";
}
@{
    Layout = null;
}
<head>
    <link rel="stylesheet" href="/css/wheel.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] | Bere Artizanală</title>
    <link rel="stylesheet" href="~/css/site.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
</head>

<body>

    <div class = "container">
    <div class="spinBtn">Spin</div>
        <div class="wheel">
            <div class="number" style="--i:1;--clr:#db7093;
            "><span>20%</span></div>
            <div class="number" style="--i:2;--clr:#20b2aa;
            "><span>15%</span></div>
            <div class="number" style="--i:3;--clr:#d63e92;
            "><span>35%</span></div>
            <div class="number" style="--i:4;--clr:#daa520;
            "><span>Lose</span></div>
            <div class="number" style="--i:5;--clr:#ff340f;
            "><span>Free</span></div>
            <div class="number" style="--i:6;--clr:#ff7f50;
            "><span>10%</span></div>
            <div class="number" style="--i:7;--clr:#3cb371;
            "><span>5%</span></div>
            <div class="number" style="--i:8;--clr:#4169e1;
            "><span>Lose</span></div>
        </div>
    </div>
    <div id="discountCode">Cod: </div>
    <div id="backToHomeButtonContainer">
        <a href="/Bere/Index" class="backToHomeButton">Back to Home</a>
    </div>
    <script>
        let wheel = document.querySelector('.wheel');
        let spinBtn = document.querySelector('.spinBtn');
        let discountCode = document.getElementById('discountCode');
        let segments = ['20%', '15%', '35%', 'Lose', 'Free', '10%', '5%', 'Lose']; // ordinea segmentelor pe roată
        let value = 0;

        spinBtn.addEventListener('click', function () {
            if (!wheel.classList.contains('spinning')) {
                // Resetăm conținutul div-ului discountCode numai dacă roata nu este deja în rotație
                discountCode.style.display = 'none';
                discountCode.textContent = '';
                let spinValue = Math.ceil(Math.random() * 3600);
                value += spinValue; // actualizăm valoarea de rotație
                wheel.style.transform = "rotate(" + value + "deg)"; // aplicăm rotația
                wheel.classList.add('spinning'); // adăugăm clasa pentru a indica că roata se învârte
            }
        });
        wheel.addEventListener('transitionend', function () {
            // Verificăm dacă roata a terminat de rotit
            if (wheel.classList.contains('spinning')) {
                let degree = value % 360;
                let segmentSize = 360 / segments.length;
                let offset = segmentSize / 2; // Jumătate din dimensiunea unui segment pentru centrul său
                let adjustedDegree = (degree + offset) % 360; // Ajustăm gradul pentru a obține centrul segmentului
                let segmentIndex = Math.floor(adjustedDegree / segmentSize); // Obținem indexul segmentului pe baza unghiului ajustat
                segmentIndex = (segments.length - segmentIndex) % segments.length; // Ajustăm indexul pentru ordinea segmentelor

                let selectedSegment = segments[segmentIndex]; // Identificăm segmentul câștigător
                sendSpinResult(selectedSegment);
                // Afișăm rezultatul corespunzător
                if (selectedSegment === 'Lose') {
                    discountCode.textContent = 'You lost!';
                } else if (selectedSegment === 'Free') {
                    discountCode.innerHTML = 'You win a free beer!<br>Your discount code: BEER';
                } else {
                    let code = selectedSegment.replace('%', '');
                    discountCode.textContent = 'Your discount code: B' + code;
                }

                discountCode.style.display = 'block'; // Afișăm mesajul
                wheel.classList.remove('spinning'); // Îndepărtăm clasa pentru a permite rotații ulterioare
            }
        });
        function sendSpinResult(result) {
            console.log('Sending result:', result);

            fetch('/SpinAndDrink/Index?handler=SaveSpinResult', {
                method: 'POST',
                headers: {
                    'Content-Type': 'text/plain'
                },
                body: result
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok: ' + response.statusText);
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data); // Loghează răspunsul de succes
            })
            .catch((error) => {
                console.error('Error during fetch:', error); // Loghează orice eroare care apare în timpul fetch
            });
        }
    </script>
</body>